{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptionsStyle","styled","div","FeedbackButton","button","FeedbackOptions","onLeaveFeedback","state","good","bad","neutral","Object","keys","map","key","type","id","onClick","Statistics","countPositiveFeedbackPercentage","countTotalFeedback","Notification","App","useState","setGood","setNeutral","setBad","target","prevState","total","positivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,cCJMC,EAAuBC,IAAOC,IAAV,oEAKpBC,EAAiBF,IAAOG,OAAV,ktBCcZC,EAlBS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,gBACnBC,EAAQ,CAAEC,KADmD,EAAzBA,KACpBC,IAD6C,EAAnBA,IACrBC,QADwC,EAAdA,SAErD,OACE,cAACV,EAAD,UACGW,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAD,OACtB,cAACX,EAAD,CACEY,KAAK,SACLC,GAAIF,EAEJG,QAASX,EAJX,SAMGQ,GAHIA,SCiBAI,EA1BI,SAAC,GAMb,IALLV,EAKI,EALJA,KACAE,EAII,EAJJA,QACAD,EAGI,EAHJA,IACAU,EAEI,EAFJA,gCACAC,EACI,EADJA,mBAEA,OACE,gCACE,uCAAUZ,KACV,0CAAaE,KACb,sCAASD,KACT,wCAAWW,KACX,qDAAwBD,EAAxB,YCTSE,EANM,kBACnB,mCACE,wDCKW,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOd,EAAP,KAAYiB,EAAZ,KAEMN,EAAqBZ,EAAOE,EAAUD,EACtCU,EAA0C,IAAPX,EAAcY,EAkBvD,OACE,8BACE,eAAC,EAAD,CAAStB,MAAM,0BAAf,UACE,cAAC,EAAD,CAAiBQ,gBAnBC,SAACF,GACvB,OAAQA,EAAOuB,OAAOX,IACpB,IAAK,OACHQ,GAAQ,SAACI,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHH,GAAW,SAACG,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHF,GAAO,SAACE,GAAD,OAAeA,EAAY,SAWlC,4CACCR,EACC,cAAC,EAAD,CACEZ,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLoB,MAAOT,EACPU,mBAAoBX,IAGtB,cAAC,EAAD,SCzCVY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f2c0f50.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const FeedbackOptionsStyle = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const FeedbackButton = styled.button`\n  display: flex;\n  overflow: hidden;\n\n  margin: 15px;\n  padding: 5px 5px;\n\n  cursor: pointer;\n  transition: all 150ms linear;\n  text-align: center;\n  white-space: nowrap;\n  text-decoration: none !important;\n  text-transform: none;\n  text-transform: capitalize;\n\n  color: #fff;\n  background-color: #416dea;\n  border: 0 none;\n  border-radius: 36px;\n\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 1.3;\n\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 160px;\n  box-shadow: 2px 5px 10px #e4e4e4;\n  &:hover {\n    transition: all 150ms linear;\n\n    opacity: 0.85;\n  }\n  &:focus {\n    outline: 1px dotted #959595;\n    outline-offset: -4px;\n  }\n`;\n","import React from \"react\";\nimport { FeedbackOptionsStyle, FeedbackButton } from \"./FeedbackOptions.styled\";\n\nconst FeedbackOptions = ({ onLeaveFeedback, good, bad, neutral }) => {\n  const state = { good, bad, neutral };\n  return (\n    <FeedbackOptionsStyle>\n      {Object.keys(state).map((key) => (\n        <FeedbackButton\n          type=\"button\"\n          id={key}\n          key={key}\n          onClick={onLeaveFeedback}\n        >\n          {key}\n        </FeedbackButton>\n      ))}\n    </FeedbackOptionsStyle>\n  );\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  countPositiveFeedbackPercentage,\n  countTotalFeedback,\n}) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {countTotalFeedback}</p>\n      <p>Positive feedbacks: {countPositiveFeedbackPercentage} %</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentageSum: PropTypes.func,\n};\n\nexport default Statistics;\n","const Notification = () => (\n  <>\n    <p>There is no feedback</p>\n  </>\n);\n\nexport default Notification;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = good + neutral + bad;\n  const countPositiveFeedbackPercentage = (good * 100) / countTotalFeedback;\n\n  const handleIncrement = (button) => {\n    switch (button.target.id) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave a feedback\">\n        <FeedbackOptions onLeaveFeedback={handleIncrement} />\n        <h2>Statistics</h2>\n        {countTotalFeedback ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}